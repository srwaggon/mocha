group 'swagnificent.party'
version '1.0-SNAPSHOT'

buildscript {
    ext {
        springBootVersion = '2.1.0.RELEASE'
        lombokVersion = '1.18.4'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'application'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

sourceCompatibility = 1.8
targetCompatibility = 1.8

mainClassName = "mocha.Main"

repositories {
    jcenter()
    mavenCentral()
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

dependencies {
    developmentOnly("org.springframework.boot:spring-boot-devtools")

    implementation("com.google.guava:guava:19.0")
    implementation("com.google.inject:guice:4.0")
    implementation("commons-io:commons-io:2.4")
    implementation("org.springframework.boot:spring-boot-starter")

    compileOnly("org.projectlombok:lombok:${lombokVersion}")
    testCompileOnly("org.projectlombok:lombok:${lombokVersion}")
    annotationProcessor("org.projectlombok:lombok:${lombokVersion}")
    testAnnotationProcessor("org.projectlombok:lombok:${lombokVersion}")

    compile project(":mocha-game")
    compile project(":mocha-net")

    testImplementation('org.assertj:assertj-core:3.3.0')
    testImplementation("org.mockito:mockito-all:1.9.5")
    testImplementation('org.springframework.boot:spring-boot-starter-test')
}

test {
    reports.junitXml.destination = file("$buildDir/../../build/test-results/mocha-client/xml")
    reports.html.destination = file("$buildDir/../../build/test-results/mocha-client/html")
}